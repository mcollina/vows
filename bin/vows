#!/usr/bin/env node

var path   = require('path'),
    sys    = require('sys'),
    fs     = require('fs'),
    events = require('events');


require.paths.unshift(path.join(__dirname, '..', 'lib'));

var vows = require('vows');
var console = require('vows/console');
var _reporter = require('vows/reporters/dot-matrix'); 
var launcher = require('vows/launcher');

var help = [
    "usage: vows [FILE, ...] [options]",
    "",
    "options:",
    "  -v, --verbose     Enable verbose output",
    "  -w, --watch       Watch mode",
    "  -s, --silent      Don't report",
    "  -m  PATTERN       Only run tests matching the PATTERN string",
    "  -r  PATTERN       Only run tests matching the PATTERN regexp",
    "  --json            Use JSON reporter",
    "  --spec            Use Spec reporter",
    "  --dot-matrix      Use Dot-Matrix reporter",
    //"  --no-color        Don't use terminal colors",
    "  --version         Show version",
    "  -h, --help        You're staring at it"
].join('\n');

var options = {
    matcher: /.*/,
    watch: false
};

var files = [];

// Get rid of process runner
// ('node' in most cases)
var arg, args = [], argv = process.argv.slice(2);

// Current directory index,
// and path of test folder.
var root, testFolder;

//
// Parse command-line parameters
//
while (arg = argv.shift()) {
    if (arg === __filename) { continue }

    if (arg[0] !== '-') {
        args.push(arg);
    } else {
        arg = arg.match(/^--?(.+)/)[1];

        if (arg[0] === 'r') {
            options.matcher = new(RegExp)(argv.shift());
        } else if (arg[0] === 'm') {
            options.matcher = (function (str) { // Create an escaped RegExp
                var specials = '. * + ? | ( ) [ ] { } \\ ^ ? ! = : $'.split(' ').join('|\\'),
                    regex    = new(RegExp)('(\\' + specials + ')', 'g');
                return new(RegExp)(str.replace(regex, '\\$1'));
            })(argv.shift());
        } else if (arg in options) {
            options[arg] = true;
        } else {
            switch (arg) {
                case 'json':
                    _reporter = require('vows/reporters/json');
                    break;
                case 'spec':
                    _reporter = require('vows/reporters/spec');
                    break;
                case 'dot-matrix':
                    _reporter = require('vows/reporters/dot-matrix');
                    break;
                case 'silent':
                case 's':
                    _reporter = require('vows/reporters/silent');
                    break;
                case 'verbose':
                case 'v':
                    options.verbose = true;
                    break;
                case 'watch':
                case 'w':
                    options.watch = true;
                    break;
                case 'no-color':
                    options.nocolor = true;
                    break;
                case 'no-error':
                    options.error = false;
                    break;
                case 'version':
                    sys.puts('vows ' + vows.version);
                    process.exit(0);
                case 'help':
                case 'h':
                    sys.puts(help);
                    process.exit(0);
                    break;
            }
        }
    }
}

launcher.config(options, _reporter);

launcher.msg('bin', 'argv', args);
launcher.msg('bin', 'options', { reporter: _reporter.name, matcher: options.matcher });

launcher.run(args);

function abort(cmd, str) {
    sys.puts(stylize('vows ', 'red') + stylize(cmd, 'bold') + ' ' + str);
    sys.puts(stylize('vows ', 'red') + stylize(cmd, 'bold') + ' exiting');
    process.exit(-1);
}
